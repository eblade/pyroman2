#!/usr/bin/env python3

from optparse import OptionParser

from pyroman.parse.pyroman.processor import Processor
from pyroman.convert import pyro2pyroman, text2pyroman, pyroman2pdf

# import pyroman.json as json

usage = "usage: %prog [options] infile [outfile]"
parser = OptionParser(usage=usage)
parser.add_option(
    '-f', '--output-format', dest="output_format", default='pdf',
    help='output format [default and only option is pdf]')
parser.add_option(
    '-i', '--input-format', dest="input_format", default='pyro',
    help='input format [default and only option is pyro]')
parser.add_option(
    '-a', '--author', dest="author", default=None,
    help='document author')
parser.add_option(
    '-d', '--output-dir', dest="output_dir", default='/tmp',
    help='output directory unless outfile is given [default is /tmp]')
parser.add_option(
    '-F', '--final', dest="final", default=False,
    action="store_true",
    help='render doc as final (no comments)')
(options, args) = parser.parse_args()

if len(args) < 1:
    print("No filename specified")
    exit(1)

filename = args[0]
outfile = args[1] if len(args) > 1 else filename + '.' + options.output_format

if options.input_format == 'pyro':
    p = Processor('', filename, True)

    if options.final:
        p.globalvars['state'] = 'final'
    else:
        p.globalvars['state'] = 'draft'

    if options.author:
        p.globalvars['author'] = options.author

    p.generate()
    document = pyro2pyroman.convert(p)

elif options.input_format == 'text':
    with open(filename, 'r') as f:
        data = f.read()
        document = text2pyroman.convert(filename, data)

else:
    print("'%s' is not a valid input format" % options.input_format)
    exit(1)

pdf = pyroman2pdf.convert(document)

with open(outfile, 'w') as f:
    f.write(str(pdf))
